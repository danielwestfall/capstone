{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\clean\\\\Desktop\\\\next-restaurant-05-master\\\\components\\\\restaurantList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\t\\tquery {\\n\\t\\t\\trestaurants {\\n\\t\\t\\t\\tid\\n\\t\\t\\t\\tname\\n\\t\\t\\t\\tdescription\\n\\t\\t\\t\\timage {\\n\\t\\t\\t\\t\\turl\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport { useContext, useState } from \"react\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState2 = useState(cart),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var GET_RESTAURANTS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 22\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 20\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }\n  }, \"Not found\");\n  console.log(\"Query Data: \".concat(data.restaurants));\n  var searchQuery = data.restaurants.filter(function (res) {\n    return res.name.toLowerCase().includes(props.search);\n  });\n  var restId = searchQuery[0].id; // definet renderer for Dishes\n\n  var renderDishes = function renderDishes(restaurantID) {\n    return __jsx(Dishes, {\n      restId: restaurantID,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }\n    }, \" \");\n  };\n\n  if (searchQuery.length > 0) {\n    var restList = searchQuery.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        key: res.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 4\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 0.5rem 20px 0.5rem\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 5\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 200\n        },\n        src: \"http://localhost:1337\" + res.image.url,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }\n      }), __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }\n      }, __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }\n      }, __jsx(Button, {\n        color: \"info\",\n        onClick: function onClick() {\n          return setRestaurantID(res.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, res.name))));\n    });\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 4\n      }\n    }, __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }\n    }, restList), __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }, renderDishes(restaurantID)));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 10\n      }\n    }, \" No Restaurants Found\");\n  }\n}\n\n_s(RestaurantList, \"AG1Od7CGruCtgOneqAeKWk/inGw=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["C:/Users/clean/Desktop/next-restaurant-05-master/components/restaurantList.js"],"names":["gql","useQuery","Dishes","useContext","useState","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Container","Row","Col","RestaurantList","props","restaurantID","setRestaurantID","cart","state","setState","GET_RESTAURANTS","loading","error","data","console","log","restaurants","searchQuery","filter","res","name","toLowerCase","includes","search","restId","id","renderDishes","length","restList","map","margin","height","image","url","description"],"mappings":"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","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\r\nimport Dishes from \"./dishes\";\r\nimport { useContext, useState } from \"react\";\r\n\r\nimport AppContext from \"./context\";\r\nimport {\r\n\tButton,\r\n\tCard,\r\n\tCardBody,\r\n\tCardImg,\r\n\tCardText,\r\n\tCardTitle,\r\n\tContainer,\r\n\tRow,\r\n\tCol,\r\n} from \"reactstrap\";\r\n\r\nfunction RestaurantList(props) {\r\n\tconst [restaurantID, setRestaurantID] = useState(0);\r\n\tconst { cart } = useContext(AppContext);\r\n\tconst [state, setState] = useState(cart);\r\n\tconst GET_RESTAURANTS = gql`\r\n\t\tquery {\r\n\t\t\trestaurants {\r\n\t\t\t\tid\r\n\t\t\t\tname\r\n\t\t\t\tdescription\r\n\t\t\t\timage {\r\n\t\t\t\t\turl\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t`;\r\n\tconst { loading, error, data } = useQuery(GET_RESTAURANTS);\r\n\tif (loading) return <p>Loading...</p>;\r\n\tif (error) return <p>ERROR</p>;\r\n\tif (!data) return <p>Not found</p>;\r\n\tconsole.log(`Query Data: ${data.restaurants}`);\r\n\r\n\tlet searchQuery = data.restaurants.filter((res) => {\r\n\t\treturn res.name.toLowerCase().includes(props.search);\r\n\t});\r\n\r\n\tlet restId = searchQuery[0].id;\r\n\r\n\t// definet renderer for Dishes\r\n\tconst renderDishes = (restaurantID) => {\r\n\t\treturn <Dishes restId={restaurantID}> </Dishes>;\r\n\t};\r\n\tif (searchQuery.length > 0) {\r\n\t\tconst restList = searchQuery.map((res) => (\r\n\t\t\t<Col xs='6' sm='4' key={res.id}>\r\n\t\t\t\t<Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\r\n\t\t\t\t\t<CardImg\r\n\t\t\t\t\t\ttop={true}\r\n\t\t\t\t\t\tstyle={{ height: 200 }}\r\n\t\t\t\t\t\tsrc={`http://localhost:1337` + res.image.url}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t<CardText>{res.description}</CardText>\r\n\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t<div className='card-footer'>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor='info'\r\n\t\t\t\t\t\t\tonClick={() => setRestaurantID(res.id)}>\r\n\t\t\t\t\t\t\t{res.name}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card>\r\n\t\t\t</Col>\r\n\t\t));\r\n\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Row xs='3'>{restList}</Row>\r\n\r\n\t\t\t\t<Row xs='3'>{renderDishes(restaurantID)}</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t} else {\r\n\t\treturn <h1> No Restaurants Found</h1>;\r\n\t}\r\n}\r\nexport default RestaurantList;\r\n"]},"metadata":{},"sourceType":"module"}